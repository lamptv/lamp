//menu_filter.js
/*
  Lampa Menu Filter ‚Äî v1.3 (2025-10-24)
  –¶–ï–õ–¨: –†–∞–±–æ—Ç–∞—Ç—å –¢–û–õ–¨–ö–û —Å –õ–ï–í–´–ú –ë–û–ö–û–í–´–ú –ú–ï–ù–Æ.
  ‚Ä¢ –û—Å—Ç–∞–≤–∏—Ç—å –∏ —É–ø–æ—Ä—è–¥–æ—á–∏—Ç—å –ø—É–Ω–∫—Ç—ã —Ä–æ–≤–Ω–æ —Ç–∞–∫:
      –ì–ª–∞–≤–Ω–∞—è ‚Üí –ü–æ–∏—Å–∫ ‚Üí –ò—Å—Ç–æ—Ä–∏—è ‚Üí –ò–∑–±—Ä–∞–Ω–Ω–æ–µ/–ó–∞–∫–ª–∞–¥–∫–∏ ‚Üí –ö–∞—Ç–∞–ª–æ–≥ ‚Üí –§–∏–ª—å—Ç—Ä ‚Üí –§–∏–ª—å–º—ã ‚Üí –°–µ—Ä–∏–∞–ª—ã ‚Üí –†–µ–ª–∏–∑—ã
  ‚Ä¢ –í—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –ª–µ–≤–æ–≥–æ –º–µ–Ω—é —Å–∫—Ä—ã—Ç—å.
  ‚Ä¢ ¬´–ü–æ–∏—Å–∫¬ª —Å–¥–µ–ª–∞—Ç—å —Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—ã–º –∏ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–º: —Å–ø–µ—Ä–≤–∞ –∫–∞–∫ —à—Ç–∞—Ç–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç (data-action="search"),
    –∑–∞—Ç–µ–º –Ω–∞–¥—ë–∂–Ω—ã–µ —Ñ–æ–ª–±—ç–∫–∏ (–∫–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –ø–æ–∏—Å–∫–∞, Controller.toggle, keydown Slash).
  ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ru/en –∞–ª–∏–∞—Å–æ–≤, –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ DOM (MutationObserver).
*/

(function(){
  'use strict';

  /*** === –ö–û–ù–§–ò–ì: –∂–µ–ª–∞–µ–º—ã–π –ø–æ—Ä—è–¥–æ–∫ –õ–ï–í–û–ì–û –ú–ï–ù–Æ === ***/
  const WHITELIST_ORDER = [
    '–ì–ª–∞–≤–Ω–∞—è',
    '–ü–æ–∏—Å–∫',
    '–ò—Å—Ç–æ—Ä–∏—è',
    '–ò–∑–±—Ä–∞–Ω–Ω–æ–µ',   // –∏–ª–∏ '–ó–∞–∫–ª–∞–¥–∫–∏' ‚Äî —Å–º. ALIASES
    '–ö–∞—Ç–∞–ª–æ–≥',
    '–§–∏–ª—å—Ç—Ä',
    '–§–∏–ª—å–º—ã',
    '–°–µ—Ä–∏–∞–ª—ã',
    '–†–µ–ª–∏–∑—ã'
  ];

  /*** –ê–ª–∏–∞—Å—ã: —Ä–∞—Å–ø–æ–∑–Ω–∞—ë–º –ø–æ–¥–ø–∏—Å–∏ –≤ —Ä–∞–∑–Ω—ã—Ö –ª–æ–∫–∞–ª—è—Ö/—Å–±–æ—Ä–∫–∞—Ö ***/
  const ALIASES = {
    '–ì–ª–∞–≤–Ω–∞—è'   : ['–ì–ª–∞–≤–Ω–∞—è','Home'],
    '–ü–æ–∏—Å–∫'     : ['–ü–æ–∏—Å–∫','Search'],
    '–ò—Å—Ç–æ—Ä–∏—è'   : ['–ò—Å—Ç–æ—Ä–∏—è','History','Recently watched'],
    '–ò–∑–±—Ä–∞–Ω–Ω–æ–µ' : ['–ò–∑–±—Ä–∞–Ω–Ω–æ–µ','–ó–∞–∫–ª–∞–¥–∫–∏','–ö–æ–ª–ª–µ–∫—Ü–∏–∏','Favorites','Bookmarks','Favs'],
    '–ö–∞—Ç–∞–ª–æ–≥'   : ['–ö–∞—Ç–∞–ª–æ–≥','Library','Catalog','Browse'],
    '–§–∏–ª—å—Ç—Ä'    : ['–§–∏–ª—å—Ç—Ä','Filter'],
    '–§–∏–ª—å–º—ã'    : ['–§–∏–ª—å–º—ã','Movies','HD –§–∏–ª—å–º—ã','Films'],
    '–°–µ—Ä–∏–∞–ª—ã'   : ['–°–µ—Ä–∏–∞–ª—ã','Series','TV Shows'],
    '–†–µ–ª–∏–∑—ã'    : ['–†–µ–ª–∏–∑—ã','Releases','HD –†–µ–ª–∏–∑—ã','HD Releases']
  };

  // –ü–∞—Ä—ã ¬´–≤–∑–∞–∏–º–æ–∑–∞–º–µ–Ω—è–µ–º—ã—Ö¬ª –ø—É–Ω–∫—Ç–æ–≤: –±–µ—Ä—ë–º –ª—é–±–æ–π, –Ω–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –∫–∞–∫ –æ–¥–∏–Ω (–¥–ª—è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ/–ó–∞–∫–ª–∞–¥–∫–∏)
  const EQUIVALENT_KEYS = {
    '–ò–∑–±—Ä–∞–Ω–Ω–æ–µ': ['–ò–∑–±—Ä–∞–Ω–Ω–æ–µ','–ó–∞–∫–ª–∞–¥–∫–∏']
  };

  // –°–µ–ª–µ–∫—Ç–æ—Ä—ã –õ–ï–í–û–ì–û –ú–ï–ù–Æ
  const MENU_LIST_SELECTOR = '.menu__list';
  const MENU_ITEM_SELECTOR = '.menu__item, .menu__list > *';

  // –£—Ç–∏–ª–∏—Ç—ã
  const norm = s => (s ? String(s).trim().toLowerCase() : '');

  function canonicalFromLabel(label){
    const n = norm(label);
    for (const key in ALIASES){
      const arr = ALIASES[key];
      for (let i=0;i<arr.length;i++){
        if (norm(arr[i]) === n) return key;
      }
      // –ø—Ä—è–º–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ª–µ–π–±–ª —É–∂–µ ¬´–∫–∞–Ω–æ–Ω–∏—á–µ—Å–∫–∏–π¬ª
      if (norm(key) === n) return key;
    }
    return null;
  }

  function isInWhitelist(canonical){
    if (!canonical) return false;
    return WHITELIST_ORDER.some(w => norm(w) === norm(canonical));
  }

  // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç ¬´–∫–∞–Ω–æ–Ω–∏—á–µ—Å–∫–∏–π –∫–ª—é—á-–≥—Ä—É–ø–ø—É¬ª —Å —É—á—ë—Ç–æ–º —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–æ–≤ (–¥–ª—è ¬´–ò–∑–±—Ä–∞–Ω–Ω–æ–µ¬ª/¬´–ó–∞–∫–ª–∞–¥–∫–∏¬ª)
  function collapseEquivalent(canonical){
    if (!canonical) return null;
    for (const mainKey in EQUIVALENT_KEYS){
      const list = EQUIVALENT_KEYS[mainKey];
      if (list.some(k => norm(k) === norm(canonical))) return mainKey;
    }
    return canonical;
  }

  // –ù–∞–¥—ë–∂–Ω—ã–π –≤—ã–∑–æ–≤ –ø–æ–∏—Å–∫–∞ (—Ü–µ–ø–æ—á–∫–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤)
  function invokeSearch(){
    // 1) –ö–ª–∏–∫ –ø–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å–∏—Å—Ç–µ–º–Ω–æ–π –∫–Ω–æ–ø–∫–µ –ø–æ–∏—Å–∫–∞ (–µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å –≤ DOM)
    const btnSelectors = ['[data-action="search"]', '.head__action--search', '.head__search'];
    for (const s of btnSelectors){
      const b = document.querySelector(s);
      if (b && typeof b.click === 'function'){
        b.click();
        return true;
      }
    }
    // 2) –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–∑–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä
    try {
      if (window.Lampa && Lampa.Controller && typeof Lampa.Controller.toggle === 'function'){
        Lampa.Controller.toggle('search');
        return true;
      }
      if (window.Lampa && Lampa.Controller && typeof Lampa.Controller.call === 'function'){
        Lampa.Controller.call('search');
        return true;
      }
    } catch(e){}
    // 3) –ë—ç–∫–∞–ø: —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∂–∞—Ç–∏–µ Slash
    try{
      const ev = new KeyboardEvent('keydown', { key:'/', code:'Slash', bubbles:true });
      document.dispatchEvent(ev);
      return true;
    }catch(e){}
    return false;
  }

  // –°–æ–∑–¥–∞—Ç—å —Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç ¬´–ü–æ–∏—Å–∫¬ª (–µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ –º–µ–Ω—é)
  function createSearchItem(){
    const el = document.createElement('div');
    // –í–∞–∂–Ω–æ: –∫–ª–∞—Å—Å selector + data-action="search" ‚Äî —á—Ç–æ–±—ã —à—Ç–∞—Ç–Ω–∞—è –¥–µ–ª–µ–≥–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≤ Lampa —Å—Ä–∞–±–æ—Ç–∞–ª–∞
    el.className = 'menu__item selector focusable menu-filter__search';
    el.setAttribute('tabindex','0');
    el.setAttribute('role','button');
    el.setAttribute('data-action','search');
    el.innerHTML = '<div class="menu__ico">üîç</div><div class="menu__text">–ü–æ–∏—Å–∫</div>';

    // –ù–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å–±–æ—Ä–∫–∞—Ö –¥–µ–ª–µ–≥–∞—Ü–∏—è –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å ‚Äî –ø–æ–¥—Å—Ç—Ä–∞—Ö—É–µ–º—Å—è —Å–≤–æ–∏–º–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏
    el.addEventListener('click', function(){
      // —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º —à—Ç–∞—Ç–Ω—ã–π –ø—É—Ç—å ‚Äî –∫–ª–∏–∫ —É–∂–µ –ø—Ä–æ—à—ë–ª; –µ—Å–ª–∏ —Å–±–æ—Ä–∫–∞ –Ω–µ –ª–æ–≤–∏—Ç, –¥–µ—Ä–≥–∞–µ–º —Ü–µ–ø–æ—á–∫—É –≤—Ä—É—á–Ω—É—é
      setTimeout(()=>{ invokeSearch(); }, 0);
    });

    el.addEventListener('keydown', function(e){
      if (e.key === 'Enter' || e.key === 'OK' || e.keyCode === 13){
        e.preventDefault();
        // –æ—Ç–ø—Ä–∞–≤–∏–º click –ø–æ —Å–∞–º–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É (–¥–ª—è –¥–µ–ª–µ–≥–∞—Ç–∞), –∞ –∑–∞—Ç–µ–º, –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π, –≤—ã–∑–æ–≤–µ–º —Ñ–æ–ª–±—ç–∫–∏
        if (typeof el.click === 'function') el.click();
        setTimeout(()=>{ invokeSearch(); }, 0);
      }
    });

    return el;
  }

  function applyMenuFilter(root){
    if (!root) return;

    // –°–æ–±–∏—Ä–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø—É–Ω–∫—Ç—ã
    const items = Array.from(root.querySelectorAll(MENU_ITEM_SELECTOR));

    // –ö–∞—Ä—Ç–∞: canonicalCollapsed -> DOM-—ç–ª–µ–º–µ–Ω—Ç (–±–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥—è—â–∏–π)
    const present = Object.create(null);

    for (const el of items){
      const labelNode = el.querySelector('.menu__text') || el;
      const label = labelNode ? labelNode.textContent : '';
      let canonical = canonicalFromLabel(label);
      canonical = collapseEquivalent(canonical);

      // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç ‚Äî —É–¥–∞–ª—è–µ–º
      if (!canonical || !isInWhitelist(canonical)){
        el.remove();
        continue;
      }

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–µ—Ä–≤—ã–π –≤—Å—Ç—Ä–µ—Ç–∏–≤—à–∏–π—Å—è DOM-—ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —ç—Ç–æ–≥–æ –∫–∞–Ω–æ–Ω–∏—á–µ—Å–∫–æ–≥–æ –∫–ª—é—á–∞
      if (!present[canonical]) present[canonical] = el;

      // –ï—Å–ª–∏ —ç—Ç–æ ¬´–ü–æ–∏—Å–∫¬ª, —É–±–µ–¥–∏–º—Å—è, —á—Ç–æ –æ–Ω –∏–º–µ–µ—Ç –Ω—É–∂–Ω—ã–µ –∫–ª–∞—Å—Å—ã/–∞—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è –¥–µ–ª–µ–≥–∞—Ç–æ–≤
      if (norm(canonical) === norm('–ü–æ–∏—Å–∫')){
        el.classList.add('selector','focusable');
        el.setAttribute('tabindex','0');
        el.setAttribute('role','button');
        el.setAttribute('data-action','search');
        // –ø–æ–¥—Å—Ç—Ä–∞—Ö–æ–≤–∫–∞ –Ω–∞ —Å—Ç–∞—Ä—ã—Ö —Å–±–æ—Ä–∫–∞—Ö
        if (!el._menu_filter_bound){
          el.addEventListener('click', ()=>{ setTimeout(()=>{ invokeSearch(); }, 0); });
          el.addEventListener('keydown', (e)=>{
            if (e.key === 'Enter' || e.key === 'OK' || e.keyCode === 13){
              e.preventDefault();
              if (typeof el.click === 'function') el.click();
              setTimeout(()=>{ invokeSearch(); }, 0);
            }
          });
          el._menu_filter_bound = true;
        }
      }
    }

    // –í—ã—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–æ–≥–ª–∞—Å–Ω–æ WHITELIST_ORDER
    const frag = document.createDocumentFragment();
    let hasSearch = false;

    for (const desired of WHITELIST_ORDER){
      const desiredCollapsed = collapseEquivalent(desired) || desired;
      const node = present[desiredCollapsed];

      if (norm(desiredCollapsed) === norm('–ü–æ–∏—Å–∫')) hasSearch = !!node;
      if (node) frag.appendChild(node);
    }

    // –ï—Å–ª–∏ ¬´–ü–æ–∏—Å–∫¬ª –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –Ω—É–∂–Ω–æ–µ –º–µ—Å—Ç–æ (–ø–æ –ø–æ–∑–∏—Ü–∏–∏ –≤ WHITELIST_ORDER)
    if (!hasSearch){
      const nodes = Array.from(frag.childNodes);
      const searchIdx = WHITELIST_ORDER.findIndex(x => norm(x) === norm('–ü–æ–∏—Å–∫'));
      const searchNode = createSearchItem();

      if (searchIdx <= 0 || nodes.length === 0){
        frag.insertBefore(searchNode, frag.firstChild);
      } else if (searchIdx >= nodes.length){
        frag.appendChild(searchNode);
      } else {
        frag.insertBefore(searchNode, nodes[searchIdx]);
      }
    }

    // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –º–µ–Ω—é
    root.innerHTML = '';
    root.appendChild(frag);
  }

  function init(){
    let tries = 0;
    const iv = setInterval(()=>{
      const root = document.querySelector(MENU_LIST_SELECTOR);
      tries++;

      if (root){
        clearInterval(iv);
        try { applyMenuFilter(root); } catch(e){}

        // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–æ–π –º–µ–Ω—é
        const mo = new MutationObserver(()=>{
          // –Ω–µ–±–æ–ª—å—à–æ–π debounce ‚Äî –º–µ–Ω—é –∏–Ω–æ–≥–¥–∞ –ø–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –ø–∞—á–∫–æ–π
          if (init._t) clearTimeout(init._t);
          init._t = setTimeout(()=>{ try{ applyMenuFilter(root); }catch(e){} }, 60);
        });
        mo.observe(root, { childList:true });
      }

      if (tries > 200){ // ~20 —Å–µ–∫—É–Ω–¥ –æ–∂–∏–¥–∞–Ω–∏—è
        clearInterval(iv);
      }
    }, 100);
  }

  if (document.readyState === 'complete' || document.readyState === 'interactive') init();
  else document.addEventListener('DOMContentLoaded', init);

})();
